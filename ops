{"author":{"id":"2925f8bae681ccf02a1c1ecc82cbb827e525744b16a0948b37a0b024362c4ec0"},"ops":[{"type":6,"timestamp":1670560634,"nonce":"ZRjdy3DSDm7dnUVzed91LbfeM6A=","target":"ab39a8cc0ece635acfb23e9a0017ef3dcc393fc1022ebab423a1c6f57609896a","message":"novelty can be optimized:\n\ncompute_novelty\n  60.202706 seconds (800.38 M allocations: 53.663 GiB, 3.16% gc time, 0.08% compilation time)\nfast_novelty\n  7.842436 seconds (784.94 k allocations: 23.881 GiB, 2.10% gc time, 0.31% compilation time)\n\n\nusing NearestNeighbors\nfunction fast_novelty(ind_bc::Vector, archive_and_pop::Matrix; k::Int=25)::Float64 \n    # for mazes\n    kdtree = KDTree(archive_and_pop, leafsize=10000000)\n    _, dists = knn(kdtree, ind_bc, k)\n    return sum(dists) / k\nend\n\nthis will help, but not solve our scaling problem","files":null},{"type":3,"timestamp":1670560805,"nonce":"MtXuH8/ers2OAs56R4UYy8P5PNs=","message":"pmapping gen 1 - 2:38s\npmapping gen 12 - 3:28s","files":null}]}